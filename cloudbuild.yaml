steps:
# Fetch entire repo
- name: gcr.io/cloud-builders/git
  args: ['fetch', '--unshallow']
  id: 'Unshallow git'

# Python checks
- name: docker.io/library/python:3.7
  args: ['pip3', 'install', '-r', 'requirements.txt', '--user']
  id: Install dependencies
- name: docker.io/library/python:3.7
  entrypoint: bash
  args: ['-c', 'python3 -m pylint --rcfile=test/pylintrc ./src/*.py']
  id: Lint source code
  waitFor: ['Install dependencies']
- name: docker.io/library/python:3.7
  entrypoint: bash
  args: ['-c', 'python3 -m pylint --rcfile=test/pylintrc ./test/sampleData/*.py']
  id: Lint autogenerated files
  waitFor: ['Install dependencies']
- name: docker.io/library/python:3.7
  entrypoint: python
  args: ['-m', 'unittest', 'discover', 'test']
  id: Run unit tests
  waitFor: ['Lint source code', 'Lint autogenerated files']
- name: docker.io/library/python:3.7
  entrypoint: python3
  args: ['src/codegen.py', '-t', 'templates/raspberrypi.py', '-o', './build', '-i', 'peripherals/Mcp4725.yaml']
  id: Sample Python codegen

# Git Presubmit Linter
- name: 'gcr.io/cloud-builders/git'
  args: ['clone', 'https://github.com/google/git-presubmit-linter.git']
  id: 'Download Git Presubmit Linter'
  waitFor: ['Unshallow git']
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args: ['-c', 'git log -1 --pretty=%B | ./git-presubmit-linter/rules/verb-tense.sh imperative']
  id: 'Commit message has correct verb tense'
  waitFor: ['Download Git Presubmit Linter']
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args: ['-c', 'git log -1 --pretty=%B | ./git-presubmit-linter/rules/no-second-line.sh']
  id: 'Commit message has no second line'
  waitFor: ['Download Git Presubmit Linter']
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args: ['-c', 'git log -1 --pretty=%B | ./git-presubmit-linter/rules/line-length.sh 80']
  id: 'Commit message is not too long'
  waitFor: ['Download Git Presubmit Linter']
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args: ['-c', 'git diff HEAD^ --pretty=%B | ./git-presubmit-linter/rules/trailing-whitespace.sh']
  id: 'Commit has no trailing whitespace'
  waitFor: ['Download Git Presubmit Linter']

artifacts:
  objects:
    # Store generated files in a Cloud Storage bucket with the commit hash as directory
    location: 'gs://cyanobyte-235018-githubci/$SHORT_SHA'
    paths: ['build/com/cyanobyte/Mcp4725.py']
